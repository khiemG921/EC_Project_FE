{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport type { NextRequest } from 'next/server';\n\nexport function middleware(request: NextRequest) {\n  const token = request.cookies.get('token')?.value;\n\n  // Protected routes that require authentication\n  const protectedRoutes = [\n    '/dashboard',\n    '/booking',\n    '/history', \n    '/vouchers',\n    '/profile',\n    '/favorite'\n  ];\n\n  // Check if current path starts with any protected route\n  const isProtectedRoute = protectedRoutes.some(route => \n    request.nextUrl.pathname.startsWith(route)\n  );\n\n  // If accessing protected route without token, redirect to login\n  if (isProtectedRoute && !token) {\n    return NextResponse.redirect(new URL('/auth/login', request.url));\n  }\n\n  return NextResponse.next();\n}\n\nexport const config = {\n  matcher: ['/', '/dashboard/:path*', '/booking/:path*', '/history/:path*', '/vouchers/:path*', '/profile/:path*', '/favorite/:path*'],\n};\n"],"names":[],"mappings":";;;;AAAA;AAAA;;AAGO,SAAS,WAAW,OAAoB;IAC7C,MAAM,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC,UAAU;IAE5C,+CAA+C;IAC/C,MAAM,kBAAkB;QACtB;QACA;QACA;QACA;QACA;QACA;KACD;IAED,wDAAwD;IACxD,MAAM,mBAAmB,gBAAgB,IAAI,CAAC,CAAA,QAC5C,QAAQ,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC;IAGtC,gEAAgE;IAChE,IAAI,oBAAoB,CAAC,OAAO;QAC9B,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,eAAe,QAAQ,GAAG;IACjE;IAEA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAEO,MAAM,SAAS;IACpB,SAAS;QAAC;QAAK;QAAqB;QAAmB;QAAmB;QAAoB;QAAmB;KAAmB;AACtI"}}]
}